import os
import sys
path = os.path.dirname(os.path.realpath(__file__)) # current path
path += "/../src"
sys.path.append(path) # add library
from interfacetk import plotpyqt
get_interface = plotpyqt.get_interface


import numpy as np
import matplotlib.pyplot as plt
import matplotlib
import sys




# get the label for the y axis
import argparse
parser = argparse.ArgumentParser()
parser.add_argument("--ylabel",default="SS")
parser.add_argument("--input",default="STATIC_CORRELATOR.OUT")
args = parser.parse_args() # get the arguments
name = args.input # input file
# define the ylabel
bra = "$\\langle GS |"
ket = "| GS \\rangle$"
if args.ylabel=="SS": ylabel = bra+"\\vec S_i \\cdot \\vec S_j"+ket
elif args.ylabel=="XX": ylabel = bra+"S^x_i S^x_j"+ket
elif args.ylabel=="YY": ylabel = bra+"S^y_i S^y_j"+ket
elif args.ylabel=="ZZ": ylabel = bra+"S^z_i S^z_j"+ket
else: raise





matplotlib.rcParams.update({'font.size': 18})
matplotlib.rcParams['font.family'] = "Bitstream Vera Serif"
m = np.genfromtxt(name).transpose()
def funfig(obj):
    fig = plt.figure(obj.figure.number)
    fig.subplots_adjust(0.2,0.2)
    fig.set_facecolor("white")
    yp = m[1] # y-axis
    ylabel0 = ylabel
    if obj.get_combobox("ptype")=="absolute":
        yp = np.abs(yp)
        ylabel0 = "|"+ylabel + "|"    
    elif obj.get_combobox("ptype")=="log absolute":
        yp = np.log(np.abs(yp))
        ylabel0 = "log(|"+ylabel + "|)"
    plt.plot(m[0],yp,marker="o",c="blue")
    plt.xlabel("Site")
    plt.ylabel(ylabel0)
    dy = (np.max(yp) - np.min(yp))*0.1
    plt.ylim([np.min(yp)-dy,np.max(yp)+dy])
    return fig



app,main = get_interface(funfig) # get the interface
main.add_combobox(["signed","absolute","log absolute"],label="Plot type",key="ptype")
main.plot()
main.show()
sys.exit(app.exec_())

